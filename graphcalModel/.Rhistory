grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = black, label='Fig2.1 in Bayesian Cognitive Modeling: A practical Course']
node [shape = circle,style = filled,fillcolor = white,color = black,label = '&thita'] thita
node [shape = square,style = filled,fillcolor = white,color = black,label = 'k'] k
node [shape = square,style = filled,fillcolor = grey,color = black,label = 'RT@_{t,i}'] n
edge [color = black]
thta -> k
n -> k
}",engine = "dot")
library(DiagrammeR)
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = black, label='Fig2.1 in Bayesian Cognitive Modeling: A practical Course']
node [shape = circle,style = filled,fillcolor = white,color = black,label = '&thita'] thita
node [shape = square,style = filled,fillcolor = white,color = black,label = 'k'] k
node [shape = square,style = filled,fillcolor = grey,color = black,label = 'RT@_{t,i}'] n
edge [color = black]
thta -> k
n -> k
}",engine = "dot")
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = black, label='Fig2.1 in Bayesian Cognitive Modeling: A practical Course']
node [shape = circle,style = filled,fillcolor = white,color = black,label = '&thita;'] thita
node [shape = square,style = filled,fillcolor = white,color = black,label = 'k'] k
node [shape = square,style = filled,fillcolor = grey,color = black,label = 'n'] n
edge [color = black]
thita -> k
n -> k
}",engine = "dot")
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = black, label='Fig2.1 in Bayesian Cognitive Modeling: A practical Course']
node [shape = circle,style = filled,fillcolor = white,color = black,label = '&thita;@'] thita
node [shape = square,style = filled,fillcolor = white,color = black,label = 'k'] k
node [shape = square,style = filled,fillcolor = grey,color = black,label = 'n'] n
edge [color = black]
thita -> k
n -> k
}",engine = "dot")
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = black, label='Fig2.1 in Bayesian Cognitive Modeling: A practical Course']
node [shape = circle,style = filled,fillcolor = white,color = black,label = '&sigma;'] thita
node [shape = square,style = filled,fillcolor = white,color = black,label = 'k'] k
node [shape = square,style = filled,fillcolor = grey,color = black,label = 'n'] n
edge [color = black]
thita -> k
n -> k
}",engine = "dot")
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = black, label='Fig2.1 in Bayesian Cognitive Modeling: A practical Course']
node [shape = circle,style = filled,fillcolor = white,color = black,label = '&theta;'] thita
node [shape = square,style = filled,fillcolor = white,color = black,label = 'k'] k
node [shape = square,style = filled,fillcolor = grey,color = black,label = 'n'] n
edge [color = black]
thita -> k
n -> k
}",engine = "dot")
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = black, label='Fig2.1 in Bayesian Cognitive Modeling: A practical Course']
node [shape = circle,style = filled,fillcolor = white,color = black,label = '&theta;'] theta
node [shape = rect,style = filled,fillcolor = white,color = black,label = 'k'] k
node [shape = rect,style = filled,fillcolor = grey,color = black,label = 'n'] n
edge [color = black]
theta -> k
n -> k
}",engine = "dot")
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = black, label='Fig2.1 in Bayesian Cognitive Modeling: A practical Course']
node [shape = circle,style = filled,fillcolor = white,color = black,label = '&theta;'] theta
node [shape = squre,style = filled,fillcolor = white,color = black,label = 'k'] k
node [shape = squre,style = filled,fillcolor = grey,color = black,label = 'n'] n
edge [color = black]
theta -> k
n -> k
}",engine = "dot")
grViz("
digraph dot {
graph [compound = true, nodesep = .5, ranksep = .25,
color = black, label='Fig2.1 in Bayesian Cognitive Modeling: A practical Course']
node [shape = circle,style = filled,fillcolor = white,color = black,label = '&theta;'] theta
node [shape = square,style = filled,fillcolor = white,color = black,label = 'k'] k
node [shape = square,style = filled,fillcolor = grey,color = black,label = 'n'] n
edge [color = black]
theta -> k
n -> k
}",engine = "dot")
