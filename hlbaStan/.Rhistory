lba -> rt
}
edge [color = black]
}
edge [color = black]
k -> lba
t -> lba
A -> lba
v1 -> lba
v2 -> lba
}
edge [color = black]
mk -> k
sk -> k
mA -> A
sA -> A
mt -> t
st -> t
mv1 -> v1
sv1 -> v1
mv2 -> v2
sv2 -> v2 [tailport=s,headport=e]
s -> lba
}",engine = "dot")
isntall.packages("listviewer")
install.packages("listviewer")
jsonedit(stanLongData)
library(listviewer)
jsonedit(stanLongData)
rm(list=ls())
library(DiagrammeR)
library(ggplot2)
library(plotly)
library(bayesplot)
library(rstan)
library(loo)
library(rtdists)
library(msm)
set.seed(123)
# 参加者数，試行数，条件数
numberSubjects <- 10
numberTrials <- 100
numberConditions <- 3
#　ハイパーパラメータの設定
A_mu = .5
b_mu = 1
t0_mu = .5
v1_mu_c1 = 2
v2_mu_c1 = 2.5
v1_mu_c2 = 3
v2_mu_c2 = 3
v1_mu_c3 = 3.5
v2_mu_c3 = 2.5
s = 1
#　ハイパーパラメータをもとにした個人のパラメータ（切断正規分布を利用）
A = rtnorm(numberSubjects,A_mu,.5,0,Inf)
b = rtnorm(numberSubjects,b_mu,.5,A,Inf)
t0 = rtnorm(numberSubjects,t0_mu,.5,0,1)
v1_c1 = rtnorm(numberSubjects,v1_mu_c1,1,0,Inf)
v2_c1 = rtnorm(numberSubjects,v2_mu_c1,1,0,Inf)
v1_c2 = rtnorm(numberSubjects,v1_mu_c2,1,0,Inf)
v2_c2 = rtnorm(numberSubjects,v2_mu_c2,1,0,Inf)
v1_c3 = rtnorm(numberSubjects,v1_mu_c3,1,0,Inf)
v2_c3 = rtnorm(numberSubjects,v2_mu_c3,1,0,Inf)
# パラメータとハイパーパラメータのデータフレーム化
hyperParameters <- data.frame(A_mu,b_mu,t0_mu,v1_mu_c1,v2_mu_c1,v1_mu_c2,v2_mu_c2,v1_mu_c3,v2_mu_c3,s)
print(hyperParameters)
parameters <- data.frame(A,b,t0,v1_c1,v2_c1,v1_c2,v2_c2,v1_c3,v2_c3)
print(parameters)
longData <- NULL
for(i in 1:numberSubjects){
id <- rep(i,numberTrials)
# 条件１
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c1[i],parameters$v2_c1[i]), sd_v=c(s,s))
condition <- rep(1,numberTrials)
indDataC1 <- data.frame(id,condition,tempRt)
# 条件2
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c2[i],parameters$v2_c2[i]), sd_v=c(s,s))
condition <- rep(2,numberTrials)
indDataC2 <- data.frame(id,condition,tempRt)
# 条件3
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c3[i],parameters$v2_c3[i]), sd_v=c(s,s))
condition <- rep(3,numberTrials)
indDataC3 <- data.frame(id,condition,tempRt)
indData <- rbind(indDataC1,indDataC2,indDataC3)
# ロングデータ
longData <- rbind(longData,indData)
}
numberAllTrials <- length(longData)
# Stan用データの作成
stanLongData <- list(rt=longData$rt,response=longData$response,id=longData$id,condition = longData$condition, numberConditions=numberConditions,numberSubjects=numberSubjects,numberChoices=2,numberAllTrials=numberAllTrials)
head(longData)
# 参加者IDが1の人の各条件のデータを作る。
dataSub1 <- subset(longData,longData$id==1)
dataSub1Con1 <- subset(dataSub1,dataSub1$condition==1)
dataSub1Con2 <- subset(dataSub1,dataSub1$condition==2)
dataSub1Con3 <- subset(dataSub1,dataSub1$condition==3)
# 条件１
table(dataSub1Con1$response)
# 条件２
table(dataSub1Con2$response)
# 条件３
table(dataSub1Con3$response)
# 選択肢1の反応時間
dataSub1Con1Choice1 <- subset(dataSub1Con1,dataSub1Con1$response==1)
p1 <- ggplot(dataSub1Con1Choice1,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
# 選択肢2の反応時間
dataSub1Con1Choice2 <- subset(dataSub1Con1,dataSub1Con1$response==2)
p2 <- ggplot(dataSub1Con1Choice2,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
subplot(p1, p2)
# 選択肢1の反応時間
dataSub1Con2Choice1 <- subset(dataSub1Con2,dataSub1Con2$response==1)
p1 <- ggplot(dataSub1Con2Choice1,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
# 選択肢2の反応時間
dataSub1Con2Choice2 <- subset(dataSub1Con2,dataSub1Con2$response==2)
p2 <- ggplot(dataSub1Con2Choice2,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
subplot(p1, p2)
# 選択肢1の反応時間
dataSub1Con3Choice1 <- subset(dataSub1Con3,dataSub1Con3$response==1)
p1 <- ggplot(dataSub1Con3Choice1,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
# 選択肢2の反応時間
dataSub1Con3Choice2 <- subset(dataSub1Con3,dataSub1Con3$response==2)
p2 <- ggplot(dataSub1Con3Choice2,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
subplot(p1, p2)
grViz("
digraph dot {
graph [splines = line,compound = true, nodesep = .5, ranksep = .25,
color = black, label='Hierarchical Bayes Model of Linear Ballistic Accumulator']
node [shape = circle,style = filled,fillcolor = white,color = black,label = 'k@_{n}'] k
node [label = '&mu;@_{k}'] mk
node [label = '&sigma;@_{k}'] sk
node [label = 'A@_{n,c}'] A
node [label = '&mu;@_{A}'] mA
node [label = '&sigma;@_{A}'] sA
node [label = '&tau;@_{n}'] t
node [label = '&mu;@_{&tau;}'] mt
node [label = '&sigma;@_{&tau;}'] st
node [label = 'v1@_{n,c}'] v1
node [label = '&mu;@_{v1}'] mv1
node [label = '&sigma;@_{v1}'] sv1
node [label = 'v2@_{n,c}'] v2
node [label = '&mu;@_{v2}'] mv2
node [label = '&sigma;@_{v2}'] sv2
node [label = 'S'] s
node [label = 'LBA@_{n,c,t}'] lba
node [fillcolor = grey,label = 'RT@_{n,c,t}'] rt
subgraph cluster1 {
labelloc=b
label = 'Participants n = 1...N'
subgraph cluster2 {
labelloc=b
label = 'Condition c = 1...C'
subgraph cluster3 {
labelloc=b
label = 'Trials t = 1...T'
edge [color = black]
lba -> rt
}
edge [color = black]
A -> lba
v1 -> lba
v2 -> lba
}
edge [color = black]
k -> lba
t -> lba
}
edge [color = black]
mk -> k
sk -> k
mA -> A
sA -> A
mt -> t
st -> t
mv1 -> v1
sv1 -> v1
mv2 -> v2
sv2 -> v2 [tailport=s,headport=e]
s -> lba
}",engine = "dot")
grViz("
digraph dot {
graph [splines = line,compound = true, nodesep = .5, ranksep = .25,
color = black, label='Hierarchical Bayes Model of Linear Ballistic Accumulator']
node [shape = circle,style = filled,fillcolor = white,color = black,label = 'k@_{n}'] k
node [label = '&mu;@_{k}'] mk
node [label = '&sigma;@_{k}'] sk
node [label = 'A@_{n,c}'] A
node [label = '&mu;@_{A}'] mA
node [label = '&sigma;@_{A}'] sA
node [label = '&tau;@_{n}'] t
node [label = '&mu;@_{&tau;}'] mt
node [label = '&sigma;@_{&tau;}'] st
node [label = 'v[1]@_{n,c}'] v1
node [label = '&mu;@_{v[1]}'] mv1
node [label = '&sigma;@_{v[1]}'] sv1
node [label = 'v[2]@_{n,c}'] v2
node [label = '&mu;@_{v[2]}'] mv2
node [label = '&sigma;@_{v[2]}'] sv2
node [label = 'S'] s
node [label = 'LBA@_{n,c,t}'] lba
node [fillcolor = grey,label = 'RT@_{n,c,t}'] rt
subgraph cluster1 {
labelloc=b
label = 'Participants n = 1...N'
subgraph cluster2 {
labelloc=b
label = 'Condition c = 1...C'
subgraph cluster3 {
labelloc=b
label = 'Trials t = 1...T'
edge [color = black]
lba -> rt
}
edge [color = black]
A -> lba
v1 -> lba
v2 -> lba
}
edge [color = black]
k -> lba
t -> lba
}
edge [color = black]
mk -> k
sk -> k
mA -> A
sA -> A
mt -> t
st -> t
mv1 -> v1
sv1 -> v1
mv2 -> v2
sv2 -> v2 [tailport=s,headport=e]
s -> lba
}",engine = "dot")
rm(list=ls())
library(DiagrammeR)
library(ggplot2)
library(plotly)
library(bayesplot)
library(rstan)
library(loo)
library(rtdists)
library(msm)
set.seed(123)
# 参加者数，試行数，条件数
numberSubjects <- 10
numberTrials <- 100
numberConditions <- 3
#　ハイパーパラメータの設定
A_mu = .5
b_mu = 1
t0_mu = .5
v1_mu_c1 = 2
v2_mu_c1 = 2.5
v1_mu_c2 = 3
v2_mu_c2 = 3
v1_mu_c3 = 3.5
v2_mu_c3 = 2.5
s = 1
#　ハイパーパラメータをもとにした個人のパラメータ（切断正規分布を利用）
A = rtnorm(numberSubjects,A_mu,.5,0,Inf)
b = rtnorm(numberSubjects,b_mu,.5,A,Inf)
t0 = rtnorm(numberSubjects,t0_mu,.5,0,1)
v1_c1 = rtnorm(numberSubjects,v1_mu_c1,1,0,Inf)
v2_c1 = rtnorm(numberSubjects,v2_mu_c1,1,0,Inf)
v1_c2 = rtnorm(numberSubjects,v1_mu_c2,1,0,Inf)
v2_c2 = rtnorm(numberSubjects,v2_mu_c2,1,0,Inf)
v1_c3 = rtnorm(numberSubjects,v1_mu_c3,1,0,Inf)
v2_c3 = rtnorm(numberSubjects,v2_mu_c3,1,0,Inf)
# パラメータとハイパーパラメータのデータフレーム化
hyperParameters <- data.frame(A_mu,b_mu,t0_mu,v1_mu_c1,v2_mu_c1,v1_mu_c2,v2_mu_c2,v1_mu_c3,v2_mu_c3,s)
print(hyperParameters)
parameters <- data.frame(A,b,t0,v1_c1,v2_c1,v1_c2,v2_c2,v1_c3,v2_c3)
print(parameters)
longData <- NULL
for(i in 1:numberSubjects){
id <- rep(i,numberTrials)
# 条件１
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c1[i],parameters$v2_c1[i]), sd_v=c(s,s))
condition <- rep(1,numberTrials)
indDataC1 <- data.frame(id,condition,tempRt)
# 条件2
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c2[i],parameters$v2_c2[i]), sd_v=c(s,s))
condition <- rep(2,numberTrials)
indDataC2 <- data.frame(id,condition,tempRt)
# 条件3
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c3[i],parameters$v2_c3[i]), sd_v=c(s,s))
condition <- rep(3,numberTrials)
indDataC3 <- data.frame(id,condition,tempRt)
indData <- rbind(indDataC1,indDataC2,indDataC3)
# ロングデータ
longData <- rbind(longData,indData)
}
numberAllTrials <- length(longData)
# Stan用データの作成
stanLongData <- list(rt=longData$rt,response=longData$response,id=longData$id,condition = longData$condition, numberConditions=numberConditions,numberSubjects=numberSubjects,numberChoices=2,numberAllTrials=numberAllTrials)
head(longData)
# 参加者IDが1の人の各条件のデータを作る。
dataSub1 <- subset(longData,longData$id==1)
dataSub1Con1 <- subset(dataSub1,dataSub1$condition==1)
dataSub1Con2 <- subset(dataSub1,dataSub1$condition==2)
dataSub1Con3 <- subset(dataSub1,dataSub1$condition==3)
# 条件１
table(dataSub1Con1$response)
# 条件２
table(dataSub1Con2$response)
# 条件３
table(dataSub1Con3$response)
# 選択肢1の反応時間
dataSub1Con1Choice1 <- subset(dataSub1Con1,dataSub1Con1$response==1)
p1 <- ggplot(dataSub1Con1Choice1,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
# 選択肢2の反応時間
dataSub1Con1Choice2 <- subset(dataSub1Con1,dataSub1Con1$response==2)
p2 <- ggplot(dataSub1Con1Choice2,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
subplot(p1, p2)
# 選択肢1の反応時間
dataSub1Con2Choice1 <- subset(dataSub1Con2,dataSub1Con2$response==1)
p1 <- ggplot(dataSub1Con2Choice1,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
# 選択肢2の反応時間
dataSub1Con2Choice2 <- subset(dataSub1Con2,dataSub1Con2$response==2)
p2 <- ggplot(dataSub1Con2Choice2,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
subplot(p1, p2)
# 選択肢1の反応時間
dataSub1Con3Choice1 <- subset(dataSub1Con3,dataSub1Con3$response==1)
p1 <- ggplot(dataSub1Con3Choice1,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
# 選択肢2の反応時間
dataSub1Con3Choice2 <- subset(dataSub1Con3,dataSub1Con3$response==2)
p2 <- ggplot(dataSub1Con3Choice2,aes(x = rt)) + geom_histogram()+coord_cartesian(xlim = c(0, 3), ylim = c(0, 10))
subplot(p1, p2)
grViz("
digraph dot {
graph [splines = line,compound = true, nodesep = .5, ranksep = .25,
color = black, label='Hierarchical Bayes Model of Linear Ballistic Accumulator']
node [shape = circle,style = filled,fillcolor = white,color = black,label = 'k@_{n}'] k
node [label = '&mu;@_{k}'] mk
node [label = '&sigma;@_{k}'] sk
node [label = 'A@_{n}'] A
node [label = '&mu;@_{A}'] mA
node [label = '&sigma;@_{A}'] sA
node [label = '&tau;@_{n}'] t
node [label = '&mu;@_{&tau;}'] mt
node [label = '&sigma;@_{&tau;}'] st
node [label = 'v[1]@_{n}'] v1
node [label = '&mu;@_{v[1]}'] mv1
node [label = '&sigma;@_{v[1]}'] sv1
node [label = 'v[2]@_{n}'] v2
node [label = '&mu;@_{v[2]}'] mv2
node [label = '&sigma;@_{v[2]}'] sv2
node [label = 'S'] s
node [label = 'LBA@_{n,c,t}'] lba
node [fillcolor = grey,label = 'RT@_{n,c,t}'] rt
subgraph cluster1 {
labelloc=b
label = 'Participants n = 1...N'
subgraph cluster2 {
labelloc=b
label = 'Condition c = 1...C'
subgraph cluster3 {
labelloc=b
label = 'Trials t = 1...T'
edge [color = black]
lba -> rt
}
edge [color = black]
}
edge [color = black]
k -> lba
t -> lba
A -> lba
v1 -> lba
v2 -> lba
}
edge [color = black]
mk -> k
sk -> k
mA -> A
sA -> A
mt -> t
st -> t
mv1 -> v1
sv1 -> v1
mv2 -> v2
sv2 -> v2 [tailport=s,headport=e]
s -> lba
}",engine = "dot")
grViz("
digraph dot {
graph [splines = line,compound = true, nodesep = .5, ranksep = .25,
color = black, label='Hierarchical Bayes Model of Linear Ballistic Accumulator']
node [shape = circle,style = filled,fillcolor = white,color = black,label = 'k@_{n}'] k
node [label = '&mu;@_{k}'] mk
node [label = '&sigma;@_{k}'] sk
node [label = 'A@_{n,c}'] A
node [label = '&mu;@_{A}'] mA
node [label = '&sigma;@_{A}'] sA
node [label = '&tau;@_{n}'] t
node [label = '&mu;@_{&tau;}'] mt
node [label = '&sigma;@_{&tau;}'] st
node [label = 'v[1]@_{n,c}'] v1
node [label = '&mu;@_{v[1]}'] mv1
node [label = '&sigma;@_{v[1]}'] sv1
node [label = 'v[2]@_{n,c}'] v2
node [label = '&mu;@_{v[2]}'] mv2
node [label = '&sigma;@_{v[2]}'] sv2
node [label = 'S'] s
node [label = 'LBA@_{n,c,t}'] lba
node [fillcolor = grey,label = 'RT@_{n,c,t}'] rt
subgraph cluster1 {
labelloc=b
label = 'Participants n = 1...N'
subgraph cluster2 {
labelloc=b
label = 'Condition c = 1...C'
subgraph cluster3 {
labelloc=b
label = 'Trials t = 1...T'
edge [color = black]
lba -> rt
}
edge [color = black]
A -> lba
v1 -> lba
v2 -> lba
}
edge [color = black]
k -> lba
t -> lba
}
edge [color = black]
mk -> k
sk -> k
mA -> A
sA -> A
mt -> t
st -> t
mv1 -> v1
sv1 -> v1
mv2 -> v2
sv2 -> v2 [tailport=s,headport=e]
s -> lba
}",engine = "dot")
rstan_options(auto_write=TRUE)
options(mc.cores = parallel::detectCores())
hmcIter = 1000
hmcChains = 4
hmcWarmup = 300
hmcThin = 2
fit1 <- sampling(lbaModel1,
seed = 1234,
data = stanData,
warmup = hmcWarmup,
iter = hmcIter,
chains = hmcChains,
thin =hmcThin)
rstan_options(auto_write=TRUE)
options(mc.cores = parallel::detectCores())
hmcIter = 1000
hmcChains = 4
hmcWarmup = 300
hmcThin = 2
fit1 <- sampling(lbaModel1,
seed = 1234,
data = stanLongData,
warmup = hmcWarmup,
iter = hmcIter,
chains = hmcChains,
thin =hmcThin)
fit2 <- sampling(lbaModel2,
seed = 1234,
data = stanLongData,
warmup = hmcWarmup,
iter = hmcIter,
chains = hmcChains,
thin =hmcThin)
longData <- NULL
for(i in 1:numberSubjects){
id <- rep(i,numberTrials)
# 条件１
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c1[i],parameters$v2_c1[i]), sd_v=c(s,s))
condition <- rep(1,numberTrials)
indDataC1 <- data.frame(id,condition,tempRt)
# 条件2
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c2[i],parameters$v2_c2[i]), sd_v=c(s,s))
condition <- rep(2,numberTrials)
indDataC2 <- data.frame(id,condition,tempRt)
# 条件3
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c3[i],parameters$v2_c3[i]), sd_v=c(s,s))
condition <- rep(3,numberTrials)
indDataC3 <- data.frame(id,condition,tempRt)
indData <- rbind(indDataC1,indDataC2,indDataC3)
# ロングデータ
longData <- rbind(longData,indData)
}
numberAllTrials <- length(longData$rt)
# Stan用データの作成
stanLongData <- list(rt=longData$rt,response=longData$response,id=longData$id,condition = longData$condition, numberConditions=numberConditions,numberSubjects=numberSubjects,numberChoices=2,numberAllTrials=numberAllTrials)
jsonedit(stanLongData)
rstan_options(auto_write=TRUE)
options(mc.cores = parallel::detectCores())
hmcIter = 1000
hmcChains = 4
hmcWarmup = 300
hmcThin = 2
fit1 <- sampling(lbaModel1,
seed = 1234,
data = stanLongData,
warmup = hmcWarmup,
iter = hmcIter,
chains = hmcChains,
thin =hmcThin)
