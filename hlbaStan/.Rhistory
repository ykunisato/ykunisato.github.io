id <- rep(i,numberTrials)
# 条件１
tempRt <- rLBA(numberTrials, A=parameters$A_c1[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c1[i],parameters$v2_c1[i]), sd_v=c(s,s))
condition <- rep(1,numberTrials)
indDataC1 <- data.frame(id,condition,tempRt)
# 条件2
tempRt <- rLBA(numberTrials, A=parameters$A_c2[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c2[i],parameters$v2_c2[i]), sd_v=c(s,s))
condition <- rep(2,numberTrials)
indDataC2 <- data.frame(id,condition,tempRt)
# 条件3
tempRt <- rLBA(numberTrials, A=parameters$A_c3[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c3[i],parameters$v2_c3[i]), sd_v=c(s,s))
condition <- rep(3,numberTrials)
indDataC3 <- data.frame(id,condition,tempRt)
indData <- rbind(indDataC1,indDataC2,indDataC3)
# ロングデータ
longData <- rbind(longData,indData)
}
set.seed(123)
# 参加者数，試行数，条件数
numberSubjects <- 10
numberTrials <- 100
numberConditions <- 3
#　ハイパーパラメータの設定
A_mu_c1 = .4
A_mu_c2 = .5
A_mu_c3 = .6
b_mu = 1
t0_mu = .5
v1_mu_c1 = 2
v2_mu_c1 = 2.5
v1_mu_c2 = 3
v2_mu_c2 = 3
v1_mu_c3 = 3.5
v2_mu_c3 = 2.5
s = 1
#　ハイパーパラメータをもとにした個人のパラメータ（切断正規分布を利用）
A_c1 = rtnorm(numberSubjects,A_mu_c1,.5,0,Inf)
A_c2 = rtnorm(numberSubjects,A_mu_c2,.5,0,Inf)
A_c3 = rtnorm(numberSubjects,A_mu_c3,.5,0,Inf)
max_A <- apply(ans,1,max)
b = rtnorm(numberSubjects,b_mu,.5,max_A,Inf)
t0 = rtnorm(numberSubjects,t0_mu,.5,0,1)
v1_c1 = rtnorm(numberSubjects,v1_mu_c1,1,0,Inf)
v2_c1 = rtnorm(numberSubjects,v2_mu_c1,1,0,Inf)
v1_c2 = rtnorm(numberSubjects,v1_mu_c2,1,0,Inf)
v2_c2 = rtnorm(numberSubjects,v2_mu_c2,1,0,Inf)
v1_c3 = rtnorm(numberSubjects,v1_mu_c3,1,0,Inf)
v2_c3 = rtnorm(numberSubjects,v2_mu_c3,1,0,Inf)
# パラメータとハイパーパラメータのデータフレーム化
hyperParameters <- data.frame(A_mu_c1,A_mu_c2,A_mu_c3,b_mu,t0_mu,v1_mu_c1,v2_mu_c1,v1_mu_c2,v2_mu_c2,v1_mu_c3,v2_mu_c3,s)
print(hyperParameters)
parameters <- data.frame(A_c1,A_c2,A_c3,b,t0,v1_c1,v2_c1,v1_c2,v2_c2,v1_c3,v2_c3)
print(parameters)
longData <- NULL
for(i in 1:numberSubjects){
id <- rep(i,numberTrials)
# 条件１
tempRt <- rLBA(numberTrials, A=parameters$A_c1[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c1[i],parameters$v2_c1[i]), sd_v=c(s,s))
condition <- rep(1,numberTrials)
indDataC1 <- data.frame(id,condition,tempRt)
# 条件2
tempRt <- rLBA(numberTrials, A=parameters$A_c2[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c2[i],parameters$v2_c2[i]), sd_v=c(s,s))
condition <- rep(2,numberTrials)
indDataC2 <- data.frame(id,condition,tempRt)
# 条件3
tempRt <- rLBA(numberTrials, A=parameters$A_c3[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c3[i],parameters$v2_c3[i]), sd_v=c(s,s))
condition <- rep(3,numberTrials)
indDataC3 <- data.frame(id,condition,tempRt)
indData <- rbind(indDataC1,indDataC2,indDataC3)
# ロングデータ
longData <- rbind(longData,indData)
}
set.seed(123)
# 参加者数，試行数，条件数
numberSubjects <- 10
numberTrials <- 100
numberConditions <- 3
#　ハイパーパラメータの設定
A_mu_c1 = .4
A_mu_c2 = .5
A_mu_c3 = .6
b_mu = 1
t0_mu = .5
v1_mu_c1 = 2
v2_mu_c1 = 2.5
v1_mu_c2 = 3
v2_mu_c2 = 3
v1_mu_c3 = 3.5
v2_mu_c3 = 2.5
s = 1
#　ハイパーパラメータをもとにした個人のパラメータ（切断正規分布を利用）
A_c1 = rtnorm(numberSubjects,A_mu_c1,.5,0,Inf)
A_c2 = rtnorm(numberSubjects,A_mu_c2,.5,0,Inf)
A_c3 = rtnorm(numberSubjects,A_mu_c3,.5,0,Inf)
Adata <- data.frame(A_c1,A_c2,A_C3)
set.seed(123)
# 参加者数，試行数，条件数
numberSubjects <- 10
numberTrials <- 100
numberConditions <- 3
#　ハイパーパラメータの設定
A_mu_c1 = .4
A_mu_c2 = .5
A_mu_c3 = .6
b_mu = 1
t0_mu = .5
v1_mu_c1 = 2
v2_mu_c1 = 2.5
v1_mu_c2 = 3
v2_mu_c2 = 3
v1_mu_c3 = 3.5
v2_mu_c3 = 2.5
s = 1
#　ハイパーパラメータをもとにした個人のパラメータ（切断正規分布を利用）
A_c1 = rtnorm(numberSubjects,A_mu_c1,.5,0,Inf)
A_c2 = rtnorm(numberSubjects,A_mu_c2,.5,0,Inf)
A_c3 = rtnorm(numberSubjects,A_mu_c3,.5,0,Inf)
Adata <- data.frame(A_c1,A_c2,A_c3)
max_A <- apply(Adata,1,max)
b = rtnorm(numberSubjects,b_mu,.5,max_A,Inf)
t0 = rtnorm(numberSubjects,t0_mu,.5,0,1)
v1_c1 = rtnorm(numberSubjects,v1_mu_c1,1,0,Inf)
v2_c1 = rtnorm(numberSubjects,v2_mu_c1,1,0,Inf)
v1_c2 = rtnorm(numberSubjects,v1_mu_c2,1,0,Inf)
v2_c2 = rtnorm(numberSubjects,v2_mu_c2,1,0,Inf)
v1_c3 = rtnorm(numberSubjects,v1_mu_c3,1,0,Inf)
v2_c3 = rtnorm(numberSubjects,v2_mu_c3,1,0,Inf)
# パラメータとハイパーパラメータのデータフレーム化
hyperParameters <- data.frame(A_mu_c1,A_mu_c2,A_mu_c3,b_mu,t0_mu,v1_mu_c1,v2_mu_c1,v1_mu_c2,v2_mu_c2,v1_mu_c3,v2_mu_c3,s)
print(hyperParameters)
parameters <- data.frame(A_c1,A_c2,A_c3,b,t0,v1_c1,v2_c1,v1_c2,v2_c2,v1_c3,v2_c3)
print(parameters)
longData <- NULL
for(i in 1:numberSubjects){
id <- rep(i,numberTrials)
# 条件１
tempRt <- rLBA(numberTrials, A=parameters$A_c1[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c1[i],parameters$v2_c1[i]), sd_v=c(s,s))
condition <- rep(1,numberTrials)
indDataC1 <- data.frame(id,condition,tempRt)
# 条件2
tempRt <- rLBA(numberTrials, A=parameters$A_c2[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c2[i],parameters$v2_c2[i]), sd_v=c(s,s))
condition <- rep(2,numberTrials)
indDataC2 <- data.frame(id,condition,tempRt)
# 条件3
tempRt <- rLBA(numberTrials, A=parameters$A_c3[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c3[i],parameters$v2_c3[i]), sd_v=c(s,s))
condition <- rep(3,numberTrials)
indDataC3 <- data.frame(id,condition,tempRt)
indData <- rbind(indDataC1,indDataC2,indDataC3)
# ロングデータ
longData <- rbind(longData,indData)
}
numberAllTrials <- length(longData$rt)
# Stan用データの作成
stanLongData <- list(rt=longData$rt,response=longData$response,id=longData$id,condition = longData$condition, numberConditions=numberConditions,numberSubjects=numberSubjects,numberChoices=2,numberAllTrials=numberAllTrials)
# MAP推定値計算関数を準備
mapEstimate <- function(z){
density(z)$x[which.max(density(z)$y)]
}
fit1AEap <- apply(extractFit1$A,2,mean)
fit1AMap <- apply(extractFit1$A,2,mapEstimate)
fit2AEap <- apply(extractFit2$A,2,mean)
fit2AMap <- apply(extractFit2$A,2,mapEstimate)
parameterA <-data.frame(parameters$A,fit1AEap,fit1AMap,fit2AEap,fit2AMap)
parameters$A
parameters
# 元々はbからデータを作っていたので，kに変更(k=b-A)
originK <- parameters$b-parameters$A
fit1kEap <- apply(extractFit1$k,2,mean)
fit1kMap <- apply(extractFit1$k,2,mapEstimate)
fit2kEap <- apply(extractFit2$k,2,mean)
fit2kMap <- apply(extractFit2$k,2,mapEstimate)
parameterK <-data.frame(originK,fit1kEap,fit1kMap,fit2kEap,fit2kMap)
set.seed(123)
# 参加者数，試行数，条件数
numberSubjects <- 10
numberTrials <- 100
numberConditions <- 3
#　ハイパーパラメータの設定
A_mu = .5
b_mu = 1
t0_mu = .5
v1_mu_c1 = 2
v2_mu_c1 = 2.5
v1_mu_c2 = 3
v2_mu_c2 = 3
v1_mu_c3 = 3.5
v2_mu_c3 = 2.5
s = 1
#　ハイパーパラメータをもとにした個人のパラメータ（切断正規分布を利用）
A = rtnorm(numberSubjects,A_mu,.5,0,Inf)
b = rtnorm(numberSubjects,b_mu,.5,A,Inf)
t0 = rtnorm(numberSubjects,t0_mu,.5,0,1)
v1_c1 = rtnorm(numberSubjects,v1_mu_c1,1,0,Inf)
v2_c1 = rtnorm(numberSubjects,v2_mu_c1,1,0,Inf)
v1_c2 = rtnorm(numberSubjects,v1_mu_c2,1,0,Inf)
v2_c2 = rtnorm(numberSubjects,v2_mu_c2,1,0,Inf)
v1_c3 = rtnorm(numberSubjects,v1_mu_c3,1,0,Inf)
v2_c3 = rtnorm(numberSubjects,v2_mu_c3,1,0,Inf)
# パラメータとハイパーパラメータのデータフレーム化
hyperParameters <- data.frame(A_mu_c1,A_mu_c2,A_mu_c3,b_mu,t0_mu,v1_mu_c1,v2_mu_c1,v1_mu_c2,v2_mu_c2,v1_mu_c3,v2_mu_c3,s)
print(hyperParameters)
parameters <- data.frame(A_c1,A_c2,A_c3,b,t0,v1_c1,v2_c1,v1_c2,v2_c2,v1_c3,v2_c3)
print(parameters)
set.seed(123)
# 参加者数，試行数，条件数
numberSubjects <- 10
numberTrials <- 100
numberConditions <- 3
#　ハイパーパラメータの設定
A_mu = .5
b_mu = 1
t0_mu = .5
v1_mu_c1 = 2
v2_mu_c1 = 2.5
v1_mu_c2 = 3
v2_mu_c2 = 3
v1_mu_c3 = 3.5
v2_mu_c3 = 2.5
s = 1
#　ハイパーパラメータをもとにした個人のパラメータ（切断正規分布を利用）
A = rtnorm(numberSubjects,A_mu,.5,0,Inf)
b = rtnorm(numberSubjects,b_mu,.5,A,Inf)
t0 = rtnorm(numberSubjects,t0_mu,.5,0,1)
v1_c1 = rtnorm(numberSubjects,v1_mu_c1,1,0,Inf)
v2_c1 = rtnorm(numberSubjects,v2_mu_c1,1,0,Inf)
v1_c2 = rtnorm(numberSubjects,v1_mu_c2,1,0,Inf)
v2_c2 = rtnorm(numberSubjects,v2_mu_c2,1,0,Inf)
v1_c3 = rtnorm(numberSubjects,v1_mu_c3,1,0,Inf)
v2_c3 = rtnorm(numberSubjects,v2_mu_c3,1,0,Inf)
# パラメータとハイパーパラメータのデータフレーム化
hyperParameters <- data.frame(A_mu,b_mu,t0_mu,v1_mu_c1,v2_mu_c1,v1_mu_c2,v2_mu_c2,v1_mu_c3,v2_mu_c3,s)
print(hyperParameters)
parameters <- data.frame(A,b,t0,v1_c1,v2_c1,v1_c2,v2_c2,v1_c3,v2_c3)
print(parameters)
longData <- NULL
for(i in 1:numberSubjects){
id <- rep(i,numberTrials)
# 条件１
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c1[i],parameters$v2_c1[i]), sd_v=c(s,s))
condition <- rep(1,numberTrials)
indDataC1 <- data.frame(id,condition,tempRt)
# 条件2
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c2[i],parameters$v2_c2[i]), sd_v=c(s,s))
condition <- rep(2,numberTrials)
indDataC2 <- data.frame(id,condition,tempRt)
# 条件3
tempRt <- rLBA(numberTrials, A=parameters$A[i], b=parameters$b[i], t0=parameters$t0[i], mean_v=c(parameters$v1_c3[i],parameters$v2_c3[i]), sd_v=c(s,s))
condition <- rep(3,numberTrials)
indDataC3 <- data.frame(id,condition,tempRt)
indData <- rbind(indDataC1,indDataC2,indDataC3)
# ロングデータ
longData <- rbind(longData,indData)
}
numberAllTrials <- length(longData$rt)
# Stan用データの作成
stanLongData <- list(rt=longData$rt,response=longData$response,id=longData$id,condition = longData$condition, numberConditions=numberConditions,numberSubjects=numberSubjects,numberChoices=2,numberAllTrials=numberAllTrials)
set.seed(123)
# 参加者数，試行数，条件数
numberSubjects <- 10
numberTrials <- 100
numberConditions <- 3
#　ハイパーパラメータの設定
A_mu = .5
b_mu = 1
t0_mu = .5
v1_mu_c1 = 2
v2_mu_c1 = 2.5
v1_mu_c2 = 3
v2_mu_c2 = 3
v1_mu_c3 = 3.5
v2_mu_c3 = 2.5
s = 1
#　ハイパーパラメータをもとにした個人のパラメータ（切断正規分布を利用）
A = rtnorm(numberSubjects,A_mu,.5,0,Inf)
b = rtnorm(numberSubjects,b_mu,.5,A,Inf)
t0 = rtnorm(numberSubjects,t0_mu,.5,0,1)
v1_c1 = rtnorm(numberSubjects,v1_mu_c1,1,0,Inf)
v2_c1 = rtnorm(numberSubjects,v2_mu_c1,1,0,Inf)
v1_c2 = rtnorm(numberSubjects,v1_mu_c2,1,0,Inf)
v2_c2 = rtnorm(numberSubjects,v2_mu_c2,1,0,Inf)
v1_c3 = rtnorm(numberSubjects,v1_mu_c3,1,0,Inf)
v2_c3 = rtnorm(numberSubjects,v2_mu_c3,1,0,Inf)
# パラメータとハイパーパラメータのデータフレーム化
hyperParameters <- data.frame(A_mu,b_mu,t0_mu,v1_mu_c1,v2_mu_c1,v1_mu_c2,v2_mu_c2,v1_mu_c3,v2_mu_c3,s)
print(hyperParameters)
parameters <- data.frame(A,b,t0,v1_c1,v2_c1,v1_c2,v2_c2,v1_c3,v2_c3)
print(parameters)
# MAP推定値計算関数を準備
mapEstimate <- function(z){
density(z)$x[which.max(density(z)$y)]
}
fit1AEap <- apply(extractFit1$A,2,mean)
fit1AMap <- apply(extractFit1$A,2,mapEstimate)
fit2AEap <- apply(extractFit2$A,2,mean)
fit2AMap <- apply(extractFit2$A,2,mapEstimate)
parameterA <-data.frame(parameters$A_c1,fit1AEap,fit1AMap,fit2AEap,fit2AMap)
# MAP推定値計算関数を準備
mapEstimate <- function(z){
density(z)$x[which.max(density(z)$y)]
}
fit1AEap <- apply(extractFit1$A,2,mean)
fit1AMap <- apply(extractFit1$A,2,mapEstimate)
fit2AEap <- apply(extractFit2$A,2,mean)
fit2AMap <- apply(extractFit2$A,2,mapEstimate)
parameterA <-data.frame(parameters$A,fit1AEap,fit1AMap,fit2AEap,fit2AMap)
print(parameterA)
Apfit1Eap <- ggplot(parameterA, aes(x=parameters.A, y=fit1AEap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of A")
Apfit2Eap <- ggplot(parameterA, aes(x=parameters.A, y=fit2AEap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of A")
plot(Apfit1Eap)
plot(Apfit2Eap)
# 元々はbからデータを作っていたので，kに変更(k=b-A)
originK <- parameters$b-parameters$A
fit1kEap <- apply(extractFit1$k,2,mean)
fit1kMap <- apply(extractFit1$k,2,mapEstimate)
fit2kEap <- apply(extractFit2$k,2,mean)
fit2kMap <- apply(extractFit2$k,2,mapEstimate)
parameterK <-data.frame(originK,fit1kEap,fit1kMap,fit2kEap,fit2kMap)
print(parameterK)
kpfit1Eap <- ggplot(parameterK, aes(x=originK, y=fit1kEap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of k")
kpfit2Eap <- ggplot(parameterK, aes(x=originK, y=fit2kEap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of k")
plot(kpfit1Eap)
plot(kpfit2Eap)
parameters
fit1psiEap <- apply(extractFit1$psi,2,mean)
fit1psiMap <- apply(extractFit1$psi,2,mapEstimate)
fit2psiEap <- apply(extractFit2$psi,2,mean)
fit2psiMap <- apply(extractFit2$psi,2,mapEstimate)
parameterPsi <-data.frame(parameters$t0,fit1psiEap,fit1psiMap,fit2psiEap,fit2psiMap)
print(parameterPsi)
Psipfit1Eap <- ggplot(parameterPsi, aes(x=parameters.t0, y=fit1psiEap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of Tau")
Psipfit2Eap <- ggplot(parameterPsi, aes(x=parameters.t0, y=fit2psiEap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of Tau")
plot(Psipfit1Eap)
plot(Psipfit2Eap)
extractFit1$v
extractFit1$v[1]
extractFit1$v[,1]
extractFit1$v[1,]
extractFit1$v1
extractFit1$v[,,1]
extractFit1$v[,,2]
extractFit1$v[,,3]
fit1AEap <- apply(extractFit1$v[,,1],2,mean)
fit1AMap <- apply(extractFit1$v[,,2],2,mapEstimate)
parameters
fit1v11Eap <- apply(extractFit1$v[,,1],2,mean)
fit1v11Map <- apply(extractFit1$v[,,1],2,mapEstimate)
fit2v11Eap <- apply(extractFit2$v[,,1,1],2,mean)
fit2v11Map <- apply(extractFit2$v[,,1,1],2,mapEstimate)
parameterV11 <-data.frame(parameters$v1_c1,fit1v11Eap,fit1v11Map,fit2v11Eap,fit2v11Map)
print(parameterV11)
V11pfit1Eap <- ggplot(parameterV11, aes(x=parameters.v1_c1, y=fit1v11Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
V11pfit2Eap <- ggplot(parameterV11, aes(x=parameters.v1_c1, y=fit2v11Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
plot(V11pfit1Eap)
plot(V11pfit2Eap)
fit1v12Eap <- apply(extractFit1$v[,,2],2,mean)
fit1v12Map <- apply(extractFit1$v[,,2],2,mapEstimate)
fit2v12Eap <- apply(extractFit2$v[,,1,2],2,mean)
fit2v12Map <- apply(extractFit2$v[,,1,2],2,mapEstimate)
parameterV12 <-data.frame(parameters$v1_c2,fit1v12Eap,fit1v12Map,fit2v12Eap,fit2v12Map)
print(parameterV12)
V12pfit1Eap <- ggplot(parameterV12, aes(x=parameters.v1_c2, y=fit1v12Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice2")
V12pfit2Eap <- ggplot(parameterV12, aes(x=parameters.v1_c2, y=fit2v12Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice2")
plot(V12pfit1Eap)
plot(V12pfit2Eap)
fit1v21Eap <- apply(extractFit1$v[,,1],2,mean)
fit1v21Map <- apply(extractFit1$v[,,1],2,mapEstimate)
fit2v21Eap <- apply(extractFit2$v[,,2,1],2,mean)
fit2v21Map <- apply(extractFit2$v[,,2,1],2,mapEstimate)
parameterV21 <-data.frame(parameters$v2_c1,fit1v21Eap,fit1v21Map,fit2v21Eap,fit2v21Map)
print(parameterV21)
V21pfit1Eap <- ggplot(parameterV21, aes(x=parameters.v2_c1, y=fit1v21Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
V21pfit2Eap <- ggplot(parameterV21, aes(x=parameters.v2_c1, y=fit2v21Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
plot(V21pfit1Eap)
plot(V21pfit2Eap)
fit1v21Eap <- apply(extractFit1$v[,,1],2,mean)
fit1v21Map <- apply(extractFit1$v[,,1],2,mapEstimate)
fit2v21Eap <- apply(extractFit2$v[,,2,1],2,mean)
fit2v21Map <- apply(extractFit2$v[,,2,1],2,mapEstimate)
parameterV21 <-data.frame(parameters$v2_c1,fit1v21Eap,fit1v21Map,fit2v21Eap,fit2v21Map)
print(parameterV21)
V21pfit1Eap <- ggplot(parameterV21, aes(x=parameters.v2_c1, y=fit1v21Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
V21pfit2Eap <- ggplot(parameterV21, aes(x=parameters.v2_c1, y=fit2v21Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
plot(V21pfit1Eap)
plot(V21pfit2Eap)
fit1v22Eap <- apply(extractFit1$v[,,2],2,mean)
fit1v22Map <- apply(extractFit1$v[,,2],2,mapEstimate)
fit2v22Eap <- apply(extractFit2$v[,,2,2],2,mean)
fit2v22Map <- apply(extractFit2$v[,,2,2],2,mapEstimate)
parameterV22 <-data.frame(parameters$v2_c2,fit1v22Eap,fit1v22Map,fit2v22Eap,fit2v22Map)
print(parameterV22)
V22pfit1Eap <- ggplot(parameterV22, aes(x=parameters.v2_c2, y=fit1v22Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice2")
V22pfit2Eap <- ggplot(parameterV22, aes(x=parameters.v2_c2, y=fit2v22Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice2")
plot(V22pfit1Eap)
plot(V22pfit2Eap)
fit1v31Eap <- apply(extractFit1$v[,,1],2,mean)
fit1v31Map <- apply(extractFit1$v[,,1],2,mapEstimate)
fit2v31Eap <- apply(extractFit2$v[,,3,1],2,mean)
fit2v31Map <- apply(extractFit2$v[,,3,1],2,mapEstimate)
parameterV31 <-data.frame(parameters$v3_c1,fit1v31Eap,fit1v31Map,fit2v31Eap,fit2v31Map)
fit1v31Eap <- apply(extractFit1$v[,,1],2,mean)
fit1v31Map <- apply(extractFit1$v[,,1],2,mapEstimate)
fit2v31Eap <- apply(extractFit2$v[,,3,1],2,mean)
fit2v31Map <- apply(extractFit2$v[,,3,1],2,mapEstimate)
parameterV31 <-data.frame(parameters$v3_c1,fit1v31Eap,fit1v31Map,fit2v31Eap,fit2v31Map)
parameters$v3_c1
parameters
fit1v31Eap <- apply(extractFit1$v[,,1],2,mean)
fit1v31Map <- apply(extractFit1$v[,,1],2,mapEstimate)
fit2v31Eap <- apply(extractFit2$v[,,3,1],2,mean)
fit2v31Map <- apply(extractFit2$v[,,3,1],2,mapEstimate)
parameterV31 <-data.frame(parameters$v1_c3,fit1v31Eap,fit1v31Map,fit2v31Eap,fit2v31Map)
print(parameterV31)
V31pfit1Eap <- ggplot(parameterV31, aes(x=parameters.v1_c3, y=fit1v31Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
V31pfit2Eap <- ggplot(parameterV31, aes(x=parameters.v1_c3, y=fit2v31Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
plot(V31pfit1Eap)
plot(V31pfit2Eap)
# MAP推定値計算関数を準備
mapEstimate <- function(z){
density(z)$x[which.max(density(z)$y)]
}
fit1AEap <- apply(extractFit1$A,2,mean)
fit1AMap <- apply(extractFit1$A,2,mapEstimate)
fit2AEap <- apply(extractFit2$A,2,mean)
fit2AMap <- apply(extractFit2$A,2,mapEstimate)
parameterA <-data.frame(parameters$A,fit1AEap,fit1AMap,fit2AEap,fit2AMap)
print(parameterA)
Apfit1Eap <- ggplot(parameterA, aes(x=parameters.A, y=fit1AEap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of A")
Apfit2Eap <- ggplot(parameterA, aes(x=parameters.A, y=fit2AEap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of A")
plot(Apfit1Eap)
plot(Apfit2Eap)
# 元々はbからデータを作っていたので，kに変更(k=b-A)
originK <- parameters$b-parameters$A
fit1kEap <- apply(extractFit1$k,2,mean)
fit1kMap <- apply(extractFit1$k,2,mapEstimate)
fit2kEap <- apply(extractFit2$k,2,mean)
fit2kMap <- apply(extractFit2$k,2,mapEstimate)
parameterK <-data.frame(originK,fit1kEap,fit1kMap,fit2kEap,fit2kMap)
print(parameterK)
kpfit1Eap <- ggplot(parameterK, aes(x=originK, y=fit1kEap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of k")
kpfit2Eap <- ggplot(parameterK, aes(x=originK, y=fit2kEap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of k")
plot(kpfit1Eap)
plot(kpfit2Eap)
fit1psiEap <- apply(extractFit1$psi,2,mean)
fit1psiMap <- apply(extractFit1$psi,2,mapEstimate)
fit2psiEap <- apply(extractFit2$psi,2,mean)
fit2psiMap <- apply(extractFit2$psi,2,mapEstimate)
parameterPsi <-data.frame(parameters$t0,fit1psiEap,fit1psiMap,fit2psiEap,fit2psiMap)
print(parameterPsi)
Psipfit1Eap <- ggplot(parameterPsi, aes(x=parameters.t0, y=fit1psiEap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of Tau")
Psipfit2Eap <- ggplot(parameterPsi, aes(x=parameters.t0, y=fit2psiEap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of Tau")
plot(Psipfit1Eap)
plot(Psipfit2Eap)
fit1v11Eap <- apply(extractFit1$v[,,1],2,mean)
fit1v11Map <- apply(extractFit1$v[,,1],2,mapEstimate)
fit2v11Eap <- apply(extractFit2$v[,,1,1],2,mean)
fit2v11Map <- apply(extractFit2$v[,,1,1],2,mapEstimate)
parameterV11 <-data.frame(parameters$v1_c1,fit1v11Eap,fit1v11Map,fit2v11Eap,fit2v11Map)
print(parameterV11)
V11pfit1Eap <- ggplot(parameterV11, aes(x=parameters.v1_c1, y=fit1v11Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
V11pfit2Eap <- ggplot(parameterV11, aes(x=parameters.v1_c1, y=fit2v11Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
plot(V11pfit1Eap)
plot(V11pfit2Eap)
fit1v12Eap <- apply(extractFit1$v[,,2],2,mean)
fit1v12Map <- apply(extractFit1$v[,,2],2,mapEstimate)
fit2v12Eap <- apply(extractFit2$v[,,1,2],2,mean)
fit2v12Map <- apply(extractFit2$v[,,1,2],2,mapEstimate)
parameterV12 <-data.frame(parameters$v2_c1,fit1v12Eap,fit1v12Map,fit2v12Eap,fit2v12Map)
print(parameterV12)
V12pfit1Eap <- ggplot(parameterV12, aes(x=parameters.v2_c1, y=fit1v12Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice2")
V12pfit2Eap <- ggplot(parameterV12, aes(x=parameters.v2_c1, y=fit2v12Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice2")
plot(V12pfit1Eap)
plot(V12pfit2Eap)
fit1v21Eap <- apply(extractFit1$v[,,1],2,mean)
fit1v21Map <- apply(extractFit1$v[,,1],2,mapEstimate)
fit2v21Eap <- apply(extractFit2$v[,,2,1],2,mean)
fit2v21Map <- apply(extractFit2$v[,,2,1],2,mapEstimate)
parameterV21 <-data.frame(parameters$v1_c2,fit1v21Eap,fit1v21Map,fit2v21Eap,fit2v21Map)
print(parameterV21)
V21pfit1Eap <- ggplot(parameterV21, aes(x=parameters.v1_c2, y=fit1v21Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
V21pfit2Eap <- ggplot(parameterV21, aes(x=parameters.v1_c2, y=fit2v21Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
plot(V21pfit1Eap)
plot(V21pfit2Eap)
fit1v22Eap <- apply(extractFit1$v[,,2],2,mean)
fit1v22Map <- apply(extractFit1$v[,,2],2,mapEstimate)
fit2v22Eap <- apply(extractFit2$v[,,2,2],2,mean)
fit2v22Map <- apply(extractFit2$v[,,2,2],2,mapEstimate)
parameterV22 <-data.frame(parameters$v2_c2,fit1v22Eap,fit1v22Map,fit2v22Eap,fit2v22Map)
print(parameterV22)
V22pfit1Eap <- ggplot(parameterV22, aes(x=parameters.v2_c2, y=fit1v22Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice2")
V22pfit2Eap <- ggplot(parameterV22, aes(x=parameters.v2_c2, y=fit2v22Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice2")
plot(V22pfit1Eap)
plot(V22pfit2Eap)
fit1v31Eap <- apply(extractFit1$v[,,1],2,mean)
fit1v31Map <- apply(extractFit1$v[,,1],2,mapEstimate)
fit2v31Eap <- apply(extractFit2$v[,,3,1],2,mean)
fit2v31Map <- apply(extractFit2$v[,,3,1],2,mapEstimate)
parameterV31 <-data.frame(parameters$v1_c3,fit1v31Eap,fit1v31Map,fit2v31Eap,fit2v31Map)
print(parameterV31)
V31pfit1Eap <- ggplot(parameterV31, aes(x=parameters.v1_c3, y=fit1v31Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
V31pfit2Eap <- ggplot(parameterV31, aes(x=parameters.v1_c3, y=fit2v31Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice1")
plot(V31pfit1Eap)
plot(V31pfit2Eap)
fit1v32Eap <- apply(extractFit1$v[,,2],2,mean)
fit1v32Map <- apply(extractFit1$v[,,2],2,mapEstimate)
fit2v32Eap <- apply(extractFit2$v[,,3,2],2,mean)
fit2v32Map <- apply(extractFit2$v[,,3,2],2,mapEstimate)
parameterV32 <-data.frame(parameters$v2_c3,fit1v32Eap,fit1v32Map,fit2v32Eap,fit2v32Map)
print(parameterV32)
V32pfit1Eap <- ggplot(parameterV32, aes(x=parameters.v2_c3, y=fit1v32Eap))+geom_point()+ xlab("Estimated parameter in With Condition Effect Model")+ylab("Original value of v in condition 1 & choice2")
V32pfit2Eap <- ggplot(parameterV32, aes(x=parameters.v2_c3, y=fit2v32Eap))+geom_point()+ xlab("Estimated parameter in Without Condition Effect Model")+ylab("Original value of v in condition 1 & choice2")
plot(V32pfit1Eap)
plot(V32pfit2Eap)
